#version 450 core

#define LCG_MUL 1
#define LCG_INC 0
#define LCG_MOD 0xffffffff

layout(local_size_x_id = 0, local_size_y_id = 1) in;

uint lcgRandom(uint prev, uint range)
{
    return ((LCG_MUL * prev + LCG_INC) % LCG_MOD) % range;
}

layout(push_constant)
uniform Parameters
{
    vec4 gGridStep;
    vec2 gGridRange;
    uint gMinHeight;
    uint gMaxHeight;
};

struct VertexInfo
{
    vec4 attr[2];
};

#define VertexInfo_GetPosition(vi) vi.attr[0].xyz
#define VertexInfo_SetPosition(vi,v) (vi.attr[0].xyz = v.xyz)
#define VertexInfo_GetVertexColor(vi) vi.attr[1].rgb
#define VertexInfo_SetVertexColor(vi,v) (vi.attr[1].rgb = v.rgb)

void main()
{
    VertexInfo vertex;
    uint prngRange = gMaxHeight - gMinHeight;
    uint height = gMinHeight + lcgRandom(gl_LocalInvocationIndex, prngRange);
    float normHeight = float(height) / float(prngRange);
    vec3 color = mix(vec3(normHeight), vec3(1., 0., 0.), vec3(0., 0., 1.));
    vec2 center = ((vec2(gl_LocalInvocationID.xy) + 0.5) * gGridStep.xy) - gGridRange.xy;
    VertexInfo_SetVertexColor(vertex, color);
}
