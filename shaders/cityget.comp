#version 450 core

#include "vertex.inc"
#include "random.inc"

layout(local_size_x_id = 0, local_size_y_id = 1) in;

layout(push_constant)
uniform Parameters
{
    vec3 gGridStep;
    uint gNumVerts;
    vec2 gGridRange;
    uint gMinHeight;
    uint gMaxHeight;
};

layout (std430, binding = 0) 
buffer Output 
{ 
    Vertex gVertices[]; 
};

const vec3 gTemplatePos[] =
{
    vec3(-0.5,0.5,0.), vec3(-0.5,-0.5,0.), vec3(0.5,0.5,0.),
    vec3(0.5,0.5,0.), vec3(-0.5,-0.5,0.), vec3(0.5,-0.5,0.)
};

void main()
{
    Vertex outputVertex;
    uint prngRange = gMaxHeight - gMinHeight;
    uint height = gMinHeight + lcgRandom(gl_LocalInvocationIndex, prngRange + 1);
    float normHeight = float(height) / float(prngRange);
    vec4 color = vec4(mix(vec3(normHeight), vec3(1.,0.,0.), vec3(0.,0.,1.)), 1.);
    vec2 center = ((vec2(gl_LocalInvocationID.xy) + 0.5) * gGridStep.xy) - gGridRange.xy;
    uint index = gl_LocalInvocationIndex * gNumVerts;
    for (uint i = 0; i < gNumVerts; i++)
    {
        uint idx = index + i;
        Vertex_SetPosition(gVertices[idx], gTemplatePos[i] * gGridStep.xyz);
        Vertex_SetVertexColor(gVertices[idx], color);
    }
}
